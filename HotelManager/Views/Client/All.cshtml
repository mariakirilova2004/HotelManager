@using HotelManager.Core.Models.Client
@using HotelManager.Core.Models.Room
@model AllClientsQueryModel;

<!-- Clients Start -->
<div class="container-xxl py-5">
    <div class="container">
        <div class="text-center">
            <h6 class="section-title text-center text-primary text-uppercase">Our Rooms</h6>
            <h1 class="mb-5">Explore Our <span class="text-primary text-uppercase">Rooms</span></h1>
            @if (User.Identity.IsAuthenticated)
            {
                <a class="btn btn-primary bg-dark" asp-area="" asp-controller="Client" asp-action="Add" class="dropdown-item">Add New Client</a>
            }
        </div>
        <form style="margin: 50px">
            <div class="row">
                <div class="form-group col-md-3">
                    <label asp-for="FirstNameSearch"></label>
                    <input asp-for="FirstNameSearch" class="form-control" placeholder="...">
                </div>
                <div class="form-group col-md-3">
                    <label asp-for="LastNameSearch"></label>
                    <input asp-for="LastNameSearch" class="form-control" placeholder="...">
                </div>
                <div class="form-group col col-md-3">
                    <div class="form-group">
                        <label asp-for="Clients">Clients per Page</label>
                        <select asp-for="Clients" class="form-control">
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                        </select>
                    </div>
                </div>

                <div class="form-group col col-md-3" style="margin-top: 50px">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
        </form>

        @{
            var previousPage = Model.CurrentPage - 1;
            if (previousPage < 1)
            {
                previousPage = 1;
            }

            var maxPage = Math.Ceiling((double)Model.TotalClientsCount /
            Model.ClientsPerPage);
        }

        <div class="row md-4">
            <div class="col-md-6 d-grid gap-2 d-mb-flex justify-content-md-start">
                <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                   asp-controller="Room"
                   asp-action="All"
                   asp-route-currentPage="@previousPage"
                   asp-route-FirstNameSearch="@Model.FirstNameSearch"
                   asp-route-LastNameSearch="@Model.LastNameSearch"><<</a>
            </div>

            @{
                var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                !Model.Clients.Any();
            }

            <div class="col-md-6 d-grid gap-2 d-mb-flex justify-content-md-end">
                <a class="btn btn-primary
                    @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Room"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-FirstNameSearch="@Model.FirstNameSearch"
                   asp-route-LastNameSearch="@Model.LastNameSearch">>></a>
            </div>
        </div>

        <div class="row g-4">
            @if (!Model.Clients.Any())
            {
                <h2 class="text-center">No clients found by the given criteria!</h2>
            }

            @if (@Model.Clients == null)
            {
                <div class="col-lg-12 col-12 text-center mb-4">
                    <h3>Coming soon...</h3>
                </div>
            }
            else
            {
                @foreach (var client in @Model.Clients)
                {
                    <partial name="_ClientPartial" model="client"/>
                }
            }
        </div>
    </div>
</div>
<!-- Clients End -->